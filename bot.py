import discord
from discord.ext import commands
from discord.ui import View, Button
import asyncio
import os
from keep_alive import keep_alive  # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞ Render

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
TOKEN = os.getenv("DISCORD_BOT_TOKEN")
GUILD_ID = int(os.getenv("GUILD_ID", 1355204242595516841))
CATEGORY_ID = int(os.getenv("CATEGORY_ID", 1355204243191238851))
TEMP_CHANNEL_ID = int(os.getenv("TEMP_CHANNEL_ID", 1355208133709926643))
CONTROL_CHANNEL_ID = int(os.getenv("CONTROL_CHANNEL_ID", 1357392366599802971))

bot = commands.Bot(command_prefix="!", intents=discord.Intents.all())

class VoiceControlPanel(View):
    def __init__(self, channel):
        super().__init__(timeout=None)
        self.channel = channel
    
    @discord.ui.button(label="+ –°–ª–æ—Ç", style=discord.ButtonStyle.blurple)
    async def add_slot(self, interaction: discord.Interaction, button: Button):
        if self.channel.user_limit < 10:
            await self.channel.edit(user_limit=self.channel.user_limit + 1)
            await interaction.response.send_message("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω 1 —Å–ª–æ—Ç", ephemeral=True)
    
    @discord.ui.button(label="- –°–ª–æ—Ç", style=discord.ButtonStyle.blurple)
    async def remove_slot(self, interaction: discord.Interaction, button: Button):
        if self.channel.user_limit > 1:
            await self.channel.edit(user_limit=self.channel.user_limit - 1)
            await interaction.response.send_message("‚úÖ –£–±—Ä–∞–Ω 1 —Å–ª–æ—Ç", ephemeral=True)
    
    @discord.ui.button(label="üîí –ó–∞–∫—Ä—ã—Ç—å", style=discord.ButtonStyle.gray)
    async def lock(self, interaction: discord.Interaction, button: Button):
        await self.channel.set_permissions(interaction.guild.default_role, connect=False)
        await interaction.response.send_message("üîí –ö–∞–Ω–∞–ª –∑–∞–∫—Ä—ã—Ç", ephemeral=True)
    
    @discord.ui.button(label="üîì –û—Ç–∫—Ä—ã—Ç—å", style=discord.ButtonStyle.gray)
    async def unlock(self, interaction: discord.Interaction, button: Button):
        await self.channel.set_permissions(interaction.guild.default_role, connect=True)
        await interaction.response.send_message("üîì –ö–∞–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç", ephemeral=True)
    
    @discord.ui.button(label="üîá –ú—å—é—Ç –≤—Å–µ—Ö", style=discord.ButtonStyle.gray)
    async def mute_all(self, interaction: discord.Interaction, button: Button):
        for member in self.channel.members:
            await member.edit(mute=True)
        await interaction.response.send_message("üîá –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∑–∞–º—å—é—á–µ–Ω—ã", ephemeral=True)
    
    @discord.ui.button(label="üîä –†–∞–∑–º—å—é—Ç –≤—Å–µ—Ö", style=discord.ButtonStyle.gray)
    async def unmute_all(self, interaction: discord.Interaction, button: Button):
        for member in self.channel.members:
            await member.edit(mute=False)
        await interaction.response.send_message("üîä –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Ä–∞–∑–º—å—é—á–µ–Ω—ã", ephemeral=True)
    
    @discord.ui.button(label="üö™ –ö–∏–∫–Ω—É—Ç—å", style=discord.ButtonStyle.red)
    async def kick_user(self, interaction: discord.Interaction, button: Button):
        await interaction.response.send_message("–í–≤–µ–¥–∏—Ç–µ @—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–∏–∫–∞:", ephemeral=True)
        
        def check(m):
            return m.author == interaction.user and m.channel == interaction.channel
        
        try:
            msg = await bot.wait_for('message', check=check, timeout=30)
            member = msg.mentions[0]
            await member.move_to(None)
            await interaction.followup.send(f"üö™ {member.mention} –∫–∏–∫–Ω—É—Ç –∏–∑ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
        except:
            await interaction.followup.send("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ —Ç–∞–π–º–∞—É—Ç.", ephemeral=True)

@bot.event
async def on_ready():
    print(f"–ë–æ—Ç {bot.user.name} –∑–∞–ø—É—â–µ–Ω!")

@bot.event
async def on_voice_state_update(member, before, after):
    if after.channel and after.channel.id == TEMP_CHANNEL_ID:
        guild = bot.get_guild(GUILD_ID)
        category = guild.get_channel(CATEGORY_ID)
        if not category:
            return
        
        try:
            temp_channel = await guild.create_voice_channel(
                name=f"üîä {member.display_name}",
                category=category
            )
            await member.move_to(temp_channel)
            
            control_channel = guild.get_channel(CONTROL_CHANNEL_ID)
            if control_channel:
                control_panel = VoiceControlPanel(temp_channel)
                await control_channel.send(
                    content=f"üéõÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {temp_channel.mention}",
                    view=control_panel
                )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {e}")

keep_alive()
bot.run(TOKEN)
